{"version":3,"sources":["./src/environments/environment.ts","./src/app/solution.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/submit-form/submit-form.component.ts","./src/app/submit-form/submit-form.component.html","./src/app/solution-results/solution-results.component.ts","./src/app/solution-results/solution-results.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable, pipe, Subject} from 'rxjs';\nimport {SolutionDto} from './solution-dto';\nimport {multicast, refCount} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SolutionService {\n  SERVER_URL = 'https://graderbot.herokuapp.com/Problems';\n  solution$ = new Subject<SolutionDto>();\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  async submitSolution(appType: string, problem: string, solution: File): Promise<void> {\n    const formData = new FormData();\n    formData.append('problemSolution', solution);\n    this.solution$.next(await this.httpClient\n      .post<SolutionDto>(`${this.SERVER_URL}/${appType}/Submit/${problem}`, formData)\n      .toPromise());\n  }\n\n  getTaskDescription(appType: string, problem: string): Observable<string> {\n    return this.httpClient\n      .get(`${this.SERVER_URL}/${appType}/Description/${problem}`, {responseType: 'text'});\n  }\n\n  getProblemsByName(appType: string, term: string): Observable<string[]> {\n    return this.httpClient\n      .get<string[]>(`${this.SERVER_URL}/${appType}/ListAll/${encodeURIComponent(term || '$^')}`);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {SolutionDto} from './solution-dto';\nimport {SolutionService} from './solution.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'GraderBotManagementConsole';\n  solution: SolutionDto;\n\n  constructor(\n    private solutionService: SolutionService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.solutionService.solution$\n      .subscribe((s) => {\n          this.solution = s;\n        }\n      );\n  }\n}\n","<app-submit-form></app-submit-form>\n<app-solution-results *ngIf=\"solution\"\n                      [id]=\"solution?.id\"\n                      [outputs]=\"solution?.outputs\">\n</app-solution-results>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\nimport {AppComponent} from './app.component';\nimport {SubmitFormComponent} from './submit-form/submit-form.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { NgxTextDiffModule } from 'ngx-text-diff';\nimport { SolutionResultsComponent } from './solution-results/solution-results.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SubmitFormComponent,\n    SolutionResultsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    ScrollingModule,\n    NgxTextDiffModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {SolutionService} from '../solution.service';\n\n@Component({\n  selector: 'app-submit-form',\n  templateUrl: './submit-form.component.html',\n  styleUrls: ['./submit-form.component.css']\n})\nexport class SubmitFormComponent implements OnInit {\n  apps = {\n    'Java Console Application': 'JavaConsoleApp',\n    'Java Unit Tested Application': 'JavaUnitTestedApp'\n  };\n\n  problemDescription: string;\n  appType: string;\n  problem: string;\n  namePattern$: Observable<string[]>;\n  private searchTerms = new Subject<string>();\n  private solutionFile: File;\n  isProblemSelected = false;\n\n  constructor(\n    private solutionService: SolutionService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.namePattern$ = this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) =>\n        this.solutionService.getProblemsByName(this.appType, term)\n          .toPromise()\n          .catch(err => [err.message]))\n    );\n  }\n\n  async onSubmit($event: Event, submitBtn: HTMLButtonElement): Promise<void> {\n    $event.preventDefault();\n    submitBtn.disabled = true;\n\n    await this.solutionService.submitSolution(this.appType, this.problem, this.solutionFile);\n    submitBtn.disabled = false;\n  }\n\n  search(term: string): void {\n    this.isProblemSelected = false;\n    this.searchTerms.next(term);\n  }\n\n  onSelectProblem(problemName: string): void {\n    this.problem = problemName;\n    this.isProblemSelected = true;\n  }\n\n  onFileSelect(target: EventTarget): void {\n    const files = (target as any).files;\n    if (files.length > 0) {\n      this.solutionFile = files[0];\n    }\n  }\n\n  onGetProblemDescription(showProblemDescriptionBtn: HTMLButtonElement): void {\n    showProblemDescriptionBtn.disabled = true;\n    this.solutionService.getTaskDescription(this.appType, this.problem)\n      .subscribe(td => {\n        this.problemDescription = td;\n        showProblemDescriptionBtn.disabled = false;\n      });\n  }\n\n  onProblemTypeSelect(problemInput: HTMLInputElement): void {\n    problemInput.disabled = false;\n  }\n}\n","<div class=\"container\">\n  <div *ngIf=\"problemDescription\">\n    <label for=\"task-description\">Task Description: </label>\n    <textarea class=\"form-control\"\n              id=\"task-description\"\n              disabled>{{problemDescription}}</textarea>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\"></div>\n    <form method=\"post\" class=\"col-auto\" (submit)=\"onSubmit($event, submitBtn)\">\n      <div class=\"form-group\">\n        <!--        App Type-->\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">Choose app type:</div>\n          </div>\n          <!--   TODO: make problem name input disabled if no app type is selected       -->\n          <select [(ngModel)]=\"appType\"\n                  (change)=\"onProblemTypeSelect(problemInput)\"\n                  id=\"problem-types\"\n                  name=\"problem-types\"\n                  class=\"form-control\">\n            <option *ngFor=\"let appType of apps | keyvalue\" value=\"{{appType.value}}\">\n              {{appType.key}}\n            </option>\n          </select>\n        </div>\n        <!--        Problem Name-->\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">Problem name:</div>\n          </div>\n          <input #problemInput\n                 id=\"problem-title\"\n                 (input)=\"search(problemInput.value)\"\n                 [(ngModel)]=\"problem\"\n                 name=\"problem\"\n                 type=\"text\"\n                 class=\"form-control\"\n                 placeholder=\"Select an app type to search\"\n                 disabled>\n          <div *ngIf=\"!isProblemSelected\" class=\"list-group\">\n            <a *ngFor=\"let problemName of namePattern$ | async\"\n               class=\"list-group-item list-group-item-action\"\n               (click)=\"onSelectProblem(problemName)\">\n              {{problemName}}\n            </a>\n          </div>\n        </div>\n        <!--        Source Code-->\n        <div class=\"input-group\">\n          <label for=\"source-code\">Source code</label>\n          <input (change)=\"onFileSelect($event.target)\"\n                 type=\"file\"\n                 class=\"form-control-file\"\n                 id=\"source-code\">\n        </div>\n      </div>\n      <button #showProblemDescriptionBtn\n              (click)=\"onGetProblemDescription(showProblemDescriptionBtn)\"\n              type=\"button\"\n              class=\"btn btn-secondary\">Show Problem Description\n      </button>\n      <button #submitBtn\n              class=\"btn btn-primary\">Submit</button>\n    </form>\n    <div class=\"col\"></div>\n  </div>\n\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {OutputsDto} from '../outputs-dto';\n\n@Component({\n  selector: 'app-solution-results',\n  templateUrl: './solution-results.component.html',\n  styleUrls: ['./solution-results.component.css']\n})\nexport class SolutionResultsComponent implements OnInit {\n  @Input() outputs: OutputsDto[];\n  @Input() id: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <h3>\n      Solution: {{id}}\n    </h3>\n  </div>\n  <div *ngFor=\"let out of outputs; let i = index\"\n       [attr.data-index]=\"i\"\n       class=\"row\">\n    <div class=\"col\">\n      <h4>Test {{i + 1}}</h4>\n      <td-ngx-text-diff\n        [left]=\"out.expected\"\n        [right]=\"out.actual\">\n      </td-ngx-text-diff>\n    </div>\n  </div>\n</div>\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}